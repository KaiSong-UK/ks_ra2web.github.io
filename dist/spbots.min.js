/*! For license information please see spbots.js.LICENSE.txt */
define("SPBots",["@chronodivide/game-api","three"],((t,e)=>(()=>{var i={436:(t,e,i)=>{const{Heap:s}=i(613),{MinHeap:r}=i(573),{MaxHeap:n}=i(945);e.Heap=s,e.MinHeap=r,e.MaxHeap=n},613:(t,e)=>{class i{constructor(t,e,i){if("function"!=typeof t)throw new Error("Heap constructor expects a compare function");this._compare=t,this._nodes=Array.isArray(e)?e:[],this._leaf=i||null}toArray(){return Array.from(this._nodes)}_hasLeftChild(t){return 2*t+1<this.size()}_hasRightChild(t){return 2*t+2<this.size()}_compareAt(t,e){return this._compare(this._nodes[t],this._nodes[e])}_swap(t,e){const i=this._nodes[t];this._nodes[t]=this._nodes[e],this._nodes[e]=i}_shouldSwap(t,e){return!(t<0||t>=this.size())&&!(e<0||e>=this.size())&&this._compareAt(t,e)>0}_compareChildrenOf(t){if(!this._hasLeftChild(t)&&!this._hasRightChild(t))return-1;const e=2*t+1,i=2*t+2;return this._hasLeftChild(t)?this._hasRightChild(t)&&this._compareAt(e,i)>0?i:e:i}_compareChildrenBefore(t,e,i){return this._compareAt(i,e)<=0&&i<t?i:e}_heapifyUp(t){let e=t,i=Math.floor((e-1)/2);for(;this._shouldSwap(i,e);)this._swap(i,e),e=i,i=Math.floor((e-1)/2)}_heapifyDown(t){let e=t,i=this._compareChildrenOf(e);for(;this._shouldSwap(e,i);)this._swap(e,i),e=i,i=this._compareChildrenOf(e)}_heapifyDownUntil(t){let e,i=0,s=1,r=2;for(;s<t;)e=this._compareChildrenBefore(t,s,r),this._shouldSwap(i,e)&&this._swap(i,e),i=e,s=2*i+1,r=2*i+2}insert(t){return this._nodes.push(t),this._heapifyUp(this.size()-1),(null===this._leaf||this._compare(t,this._leaf)>0)&&(this._leaf=t),this}push(t){return this.insert(t)}extractRoot(){if(this.isEmpty())return null;const t=this.root();return this._nodes[0]=this._nodes[this.size()-1],this._nodes.pop(),this._heapifyDown(0),t===this._leaf&&(this._leaf=this.root()),t}pop(){return this.extractRoot()}sort(){for(let t=this.size()-1;t>0;t-=1)this._swap(0,t),this._heapifyDownUntil(t);return this._nodes}fix(){for(let t=Math.floor(this.size()/2)-1;t>=0;t-=1)this._heapifyDown(t);for(let t=Math.floor(this.size()/2);t<this.size();t+=1){const e=this._nodes[t];(null===this._leaf||this._compare(e,this._leaf)>0)&&(this._leaf=e)}return this}isValid(){const t=e=>{let i=!0,s=!0;if(this._hasLeftChild(e)){const s=2*e+1;if(this._compareAt(e,s)>0)return!1;i=t(s)}if(this._hasRightChild(e)){const i=2*e+2;if(this._compareAt(e,i)>0)return!1;s=t(i)}return i&&s};return t(0)}clone(){return new i(this._compare,this._nodes.slice(),this._leaf)}root(){return this.isEmpty()?null:this._nodes[0]}top(){return this.root()}leaf(){return this._leaf}size(){return this._nodes.length}isEmpty(){return 0===this.size()}clear(){this._nodes=[],this._leaf=null}[Symbol.iterator](){let t=this.size();return{next:()=>(t-=1,{value:this.pop(),done:-1===t})}}static heapify(t,e){if(!Array.isArray(t))throw new Error("Heap.heapify expects an array of values");if("function"!=typeof e)throw new Error("Heap.heapify expects a compare function");return new i(e,t).fix()}static isHeapified(t,e){return new i(e,t).isValid()}}e.Heap=i},945:(t,e,i)=>{const{Heap:s}=i(613),r=t=>(e,i)=>("function"==typeof t?t(e):e)<("function"==typeof t?t(i):i)?1:-1;class n{constructor(t,e){this._getCompareValue=t,this._heap=e||new s(r(t))}insert(t){return this._heap.insert(t)}push(t){return this.insert(t)}extractRoot(){return this._heap.extractRoot()}pop(){return this.extractRoot()}sort(){return this._heap.sort()}toArray(){return Array.from(this._heap._nodes)}fix(){return this._heap.fix()}isValid(){return this._heap.isValid()}root(){return this._heap.root()}top(){return this.root()}leaf(){return this._heap.leaf()}size(){return this._heap.size()}isEmpty(){return this._heap.isEmpty()}clear(){this._heap.clear()}clone(){return new n(this._getCompareValue,this._heap.clone())}[Symbol.iterator](){let t=this.size();return{next:()=>(t-=1,{value:this.pop(),done:-1===t})}}static heapify(t,e){if(!Array.isArray(t))throw new Error("MaxHeap.heapify expects an array");const i=new s(r(e),t);return new n(e,i).fix()}static isHeapified(t,e){const i=new s(r(e),t);return new n(e,i).isValid()}}e.MaxHeap=n},573:(t,e,i)=>{const{Heap:s}=i(613),r=t=>(e,i)=>("function"==typeof t?t(e):e)<=("function"==typeof t?t(i):i)?-1:1;class n{constructor(t,e){this._getCompareValue=t,this._heap=e||new s(r(t))}toArray(){return Array.from(this._heap._nodes)}insert(t){return this._heap.insert(t)}push(t){return this.insert(t)}extractRoot(){return this._heap.extractRoot()}pop(){return this.extractRoot()}sort(){return this._heap.sort()}fix(){return this._heap.fix()}isValid(){return this._heap.isValid()}root(){return this._heap.root()}top(){return this.root()}leaf(){return this._heap.leaf()}size(){return this._heap.size()}isEmpty(){return this._heap.isEmpty()}clear(){this._heap.clear()}clone(){return new n(this._getCompareValue,this._heap.clone())}[Symbol.iterator](){let t=this.size();return{next:()=>(t-=1,{value:this.pop(),done:-1===t})}}static heapify(t,e){if(!Array.isArray(t))throw new Error("MinHeap.heapify expects an array");const i=new s(r(e),t);return new n(e,i).fix()}static isHeapified(t,e){const i=new s(r(e),t);return new n(e,i).isValid()}}e.MinHeap=n},82:(t,e,i)=>{const{MinPriorityQueue:s}=i(192),{MaxPriorityQueue:r}=i(387),{PriorityQueue:n}=i(515);t.exports={MinPriorityQueue:s,MaxPriorityQueue:r,PriorityQueue:n}},387:(t,e,i)=>{const{Heap:s,MaxHeap:r}=i(436);class n{constructor(t,e){if(t&&"function"!=typeof t)throw new Error("MaxPriorityQueue constructor requires a callback for object values");this._heap=e||new r(t)}front(){return this._heap.root()}back(){return this._heap.leaf()}enqueue(t){return this._heap.insert(t)}push(t){return this.enqueue(t)}dequeue(){return this._heap.extractRoot()}pop(){return this.dequeue()}remove(t){if("function"!=typeof t)throw new Error("MaxPriorityQueue remove expects a callback");const e=[],i=[];for(;!this.isEmpty();){const s=this.pop();t(s)?e.push(s):i.push(s)}return i.forEach((t=>this.push(t))),e}size(){return this._heap.size()}isEmpty(){return this._heap.isEmpty()}clear(){this._heap.clear()}toArray(){return this._heap.clone().sort().reverse()}[Symbol.iterator](){let t=this.size();return{next:()=>(t-=1,{value:this.pop(),done:-1===t})}}static fromArray(t,e){const i=new s((t=>(e,i)=>("function"==typeof t?t(e):e)<("function"==typeof t?t(i):i)?1:-1)(e),t);return new n(e,new r(e,i).fix())}}e.MaxPriorityQueue=n},192:(t,e,i)=>{const{Heap:s,MinHeap:r}=i(436);class n{constructor(t,e){if(t&&"function"!=typeof t)throw new Error("MinPriorityQueue constructor requires a callback for object values");this._heap=e||new r(t)}front(){return this._heap.root()}back(){return this._heap.leaf()}enqueue(t){return this._heap.insert(t)}push(t){return this.enqueue(t)}dequeue(){return this._heap.extractRoot()}pop(){return this.dequeue()}remove(t){if("function"!=typeof t)throw new Error("MinPriorityQueue remove expects a callback");const e=[],i=[];for(;!this.isEmpty();){const s=this.pop();t(s)?e.push(s):i.push(s)}return i.forEach((t=>this.push(t))),e}size(){return this._heap.size()}isEmpty(){return this._heap.isEmpty()}clear(){this._heap.clear()}toArray(){return this._heap.clone().sort().reverse()}[Symbol.iterator](){let t=this.size();return{next:()=>(t-=1,{value:this.pop(),done:-1===t})}}static fromArray(t,e){const i=new s((t=>(e,i)=>("function"==typeof t?t(e):e)<=("function"==typeof t?t(i):i)?-1:1)(e),t);return new n(e,new r(e,i).fix())}}e.MinPriorityQueue=n},515:(t,e,i)=>{const{Heap:s}=i(436);class r{constructor(t,e){if("function"!=typeof t)throw new Error("PriorityQueue constructor expects a compare function");this._heap=new s(t,e),e&&this._heap.fix()}front(){return this._heap.root()}back(){return this._heap.leaf()}enqueue(t){return this._heap.insert(t)}push(t){return this.enqueue(t)}dequeue(){return this._heap.extractRoot()}pop(){return this.dequeue()}remove(t){if("function"!=typeof t)throw new Error("PriorityQueue remove expects a callback");const e=[],i=[];for(;!this.isEmpty();){const s=this.pop();t(s)?e.push(s):i.push(s)}return i.forEach((t=>this.push(t))),e}size(){return this._heap.size()}isEmpty(){return this._heap.isEmpty()}clear(){this._heap.clear()}toArray(){return this._heap.clone().sort().reverse()}[Symbol.iterator](){let t=this.size();return{next:()=>(t-=1,{value:this.pop(),done:-1===t})}}static fromArray(t,e){return new r(e,t)}}e.PriorityQueue=r},629:e=>{"use strict";e.exports=t},295:t=>{"use strict";t.exports=e}},s={};function r(t){var e=s[t];if(void 0!==e)return e.exports;var n=s[t]={exports:{}};return i[t](n,n.exports,r),n.exports}r.d=(t,e)=>{for(var i in e)r.o(e,i)&&!r.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};var n={};return(()=>{"use strict";r.r(n),r.d(n,{SupalosaBot:()=>Tt});var t=r(629);function e(t,e,i,s){let r=0,n=0;for(let o=i.x;o<s.x;++o)for(let a=i.y;a<s.y;++a){let i=t.getTile(o,a);i&&(++r,t.isVisibleTile(i,e.name)&&++n)}return{visibleTiles:n,validTiles:r}}function i(e,i,s,r,n,o){let a=r+Math.round(e.generateRandom()*(n-r)),h=t.GameMath.atan2(s.y-i.y,s.x-i.x)-(o*(Math.PI/12)+2*o*e.generateRandom()*(Math.PI/12)),u=Math.round(i.x+t.GameMath.cos(h)*a),c=Math.round(i.y+t.GameMath.sin(h)*a);return new t.Vector2(u,c)}function s(e,i){return new t.Vector2(e.rx,e.ry).distanceTo(i)}class o{constructor(t,e,i,s){this.sectorStartPoint=t,this.sectorStartTile=e,this.sectorVisibilityPct=i,this.sectorVisibilityLastCheckTick=s,this.sectorExploreAttempts=0}onExploreAttempted(t){this.sectorExploreAttempts++,this.sectorLastExploredAt=t}shouldAttemptExploration(t,e,i){return!(i>=this.sectorExploreAttempts||this.sectorLastExploredAt&&t<this.sectorLastExploredAt+e)}}class a{constructor(e,i){this.sectors=[],this.mapBounds=i,this.sectorsX=Math.ceil(i.width/8),this.sectorsY=Math.ceil(i.height/8),this.sectors=new Array(this.sectorsX);for(let i=0;i<this.sectorsX;++i){this.sectors[i]=new Array(this.sectorsY);for(let s=0;s<this.sectorsY;++s){const r=8*i,n=8*s;this.sectors[i][s]=new o(new t.Vector2(r,n),e.getTile(r,n),void 0,void 0)}}}getMapBounds(){return this.mapBounds}updateSectors(i,s,r,n){let o=this.lastUpdatedSectorX?this.lastUpdatedSectorX+1:0,a=this.lastUpdatedSectorY?this.lastUpdatedSectorY:0,h=0;for(;h<s;){o>=this.sectorsX&&(o=0,++a),a>=this.sectorsY&&(a=0,o=0);let s=this.getSector(o,a);if(s){s.sectorVisibilityLastCheckTick=i;let o=s.sectorStartPoint,a=e(r,n,o,new t.Vector2(o.x+8,o.y+8));a.validTiles>0?s.sectorVisibilityPct=a.visibleTiles/a.validTiles:s.sectorVisibilityPct=void 0}this.lastUpdatedSectorX=o,this.lastUpdatedSectorY=a,++o,++h}}getSectorUpdateRatio(t){let e=0,i=0;for(let s=0;s<this.sectorsX;++s)for(let r=0;r<this.sectorsY;++r){let n=this.sectors[s][r];n&&n.sectorVisibilityLastCheckTick&&n.sectorVisibilityLastCheckTick>=t&&++e,++i}return e/i}getOverallVisibility(){let t=0,e=0;for(let i=0;i<this.sectorsX;++i)for(let s=0;s<this.sectorsY;++s){let r=this.sectors[i][s];null!=r.sectorVisibilityPct&&(t+=r.sectorVisibilityPct,e+=1)}return t/e}getSector(t,e){if(!(t<0||t>=this.sectorsX||e<0||e>=this.sectorsY))return this.sectors[t][e]}getSectorBounds(){return{width:this.sectorsX,height:this.sectorsY}}getSectorCoordinatesForWorldPosition(t,e){if(!(t<0||t>=this.mapBounds.width||e<0||e>=this.mapBounds.height))return{sectorX:Math.floor(t/8),sectorY:Math.floor(e/8)}}getSectorForWorldPosition(t,e){if(this.getSectorCoordinatesForWorldPosition(t,e))return this.sectors[Math.floor(t/8)][Math.floor(e/8)]}}class h{constructor(t,e){this.uniqueName=t,this.logger=e,this.active=!0,this.unitIds=[],this.centerOfMass=null,this.maxDistanceToCenterOfMass=null,this.onFinish=()=>{}}updateCenterOfMass(e){const i=(e=>{if(0===e.length)return null;const i=e.reduce((({x:t,y:e},i)=>({x:t+(i?.rx||0),y:e+(i?.ry||0)})),{x:0,y:0}),r=new t.Vector2(Math.round(i.x/e.length),Math.round(i.y/e.length)),n=e.map((t=>s(t,r))),o=Math.max(...n);return{centerOfMass:r,maxDistance:o}})(this.unitIds.map((t=>e.getUnitData(t))).filter((t=>t?.canMove)).map((t=>t?.tile)).filter((t=>!!t)));i?(this.centerOfMass=i.centerOfMass,this.maxDistanceToCenterOfMass=i.maxDistance):(this.centerOfMass=null,this.maxDistanceToCenterOfMass=null)}onAiUpdate(t,e,i,s,r){return this.updateCenterOfMass(t),this._onAiUpdate(t,e,i,s,r)}isActive(){return this.active}getUnitIds(){return this.unitIds}removeUnit(t){this.unitIds=this.unitIds.filter((e=>e!=t))}addUnit(t){this.unitIds.push(t)}getUnits(t){return this.unitIds.map((e=>t.getUnitData(e))).filter((t=>null!=t)).map((t=>t))}getUnitsOfTypes(t,...e){return this.unitIds.map((e=>t.getUnitData(e))).filter((t=>!!t&&e.includes(t.name))).map((t=>t))}getUnitsMatching(t,e){return this.unitIds.map((e=>t.getUnitData(e))).filter((t=>!!t&&e(t))).map((t=>t))}getCenterOfMass(){return this.centerOfMass}getMaxDistanceToCenterOfMass(){return this.maxDistanceToCenterOfMass}getUniqueName(){return this.uniqueName}endMission(t){this.onFinish(this.unitIds,t),this.active=!1}then(t){return this.onFinish=t,this}isUnitsLocked(){return!0}}const u=t=>({type:"disband",reason:t}),c=t=>"disband"===t.action.type,l=(t,e)=>({type:"request",unitNames:t,priority:e}),g=t=>"request"===t.action.type,p=(t,e)=>({type:"requestSpecific",unitIds:t,priority:e}),d=t=>"requestSpecific"===t.action.type,m=t=>"requestCombatants"===t.action.type,f=t=>"releaseUnits"===t.action.type;class y extends h{constructor(t,e,i,s){super(t,s),this.priority=e,this.selectedMcv=i,this.hasAttemptedDeployWith=null}_onAiUpdate(e,i,s,r,n){const o=["AMCV","SMCV"],a=this.getUnitsOfTypes(e,...o);return 0===a.length?null!==this.hasAttemptedDeployWith?u():this.selectedMcv?p([this.selectedMcv],this.priority):l(o,this.priority):((!this.hasAttemptedDeployWith||e.getCurrentTick()>this.hasAttemptedDeployWith.gameTick+30)&&(i.orderUnits(a.map((t=>t.id)),t.OrderType.DeploySelected),this.hasAttemptedDeployWith={unitId:a[0].id,gameTick:e.getCurrentTick()}),{type:"noop"})}getGlobalDebugText(){return`Expand with MCV ${this.selectedMcv}`}getPriority(){return this.priority}}class A{getName(){return"ExpansionMissionFactory"}maybeCreateMissions(t,e,i,s,r){t.getVisibleUnits(e.name,"self",(e=>t.getGeneralRules().baseUnit.includes(e.name))).forEach((t=>{s.addMission(new y("expand-with-"+t,100,t,r))}))}onMissionFailed(t,e,i,s,r,n){}}const T=t=>"@@NEUTRAL@@"===t?.owner;function b(t,e="0000"){let i=""+t;return e.substring(0,e.length-i.length)+i}function w(t,e){if(0===t.length)return null;let i=0,s=e(t[0]);for(let r=1;r<t.length;++r){const n=e(t[r]);(null===s||null!==n&&n>s)&&(i=r,s=n)}return t[i]}function x(t,e){return t.reduce(((t,i)=>{const s=e(i);return void 0===s||(t[s]||(t[s]=0),t[s]=t[s]+1),t}),{})}function M(t,e){return t.reduce(((t,i)=>{const s=e(i);return void 0===s||(t.hasOwnProperty(s)||(t[s]=[]),t[s].push(i)),t}),{})}class P{constructor(t,e,i,s,r=0){this._unitId=t,this._orderType=e,this._point=i,this._targetId=s,this._nonce=r}static noTarget(t,e,i=0){return new P(t,e,void 0,void 0,i)}static toPoint(t,e,i,s=0){return new P(t,e,i,void 0)}static toTargetId(t,e,i,s=0){return new P(t,e,void 0,i,s)}get unitId(){return this._unitId}get orderType(){return this._orderType}get point(){return this._point}get targetId(){return this._targetId}isSameAs(t){return this._unitId===t._unitId&&this._orderType===t._orderType&&this._point===t._point&&this._targetId===t._targetId&&this._nonce===t._nonce}}class U{constructor(){this.actions=[]}push(t){this.actions.push(t)}resolve(e){const i=M(this.actions,(t=>t.orderType.valueOf().toString()));Object.entries(i).forEach((([i,s])=>{const r=parseInt(i),n=M(s.filter((t=>!!t.targetId)),(t=>t.targetId?.toString()));Object.entries(n).forEach((([t,i])=>{e.orderUnits(i.map((t=>t.unitId)),r,parseInt(t))}));const o=M(s.filter((t=>!!t.point)),(t=>{return(e=t.point).x+","+e.y;var e}));Object.entries(o).forEach((([i,s])=>{const n=(e=>{const[i,s]=e.split(",");return new t.Vector2(parseInt(i),parseInt(s))})(i);e.orderUnits(s.map((t=>t.unitId)),r,n.x,n.y)}));const a=s.filter((t=>!t.targetId&&!t.point));a.length>0&&e.orderUnits(a.map((t=>t.unitId)),r)}))}}function C(e,i){return"E1"===e.name&&e.stance===t.StanceType.Deployed?P.noTarget(e.id,t.OrderType.DeploySelected,1):P.toPoint(e.id,t.OrderType.AttackMove,i)}function S(e,i){const s=(r=e,n=i,new t.Vector2(r.tile.rx,r.tile.ry).distanceTo(new t.Vector2(n.tile.rx,n.tile.ry)));var r,n;if("E1"===e.name){const i=e.secondaryWeapon?.maxRange||5,r=e.stance===t.StanceType.Deployed;if(!r&&(s<=i||e.attackState===t.AttackState.JustFired))return P.noTarget(e.id,t.OrderType.DeploySelected,0);if(r&&s>i)return P.noTarget(e.id,t.OrderType.DeploySelected,1)}let o=i,a=t.OrderType.Attack;const h=e.primaryWeapon?.maxRange||5;return(o?.type==t.ObjectType.Building&&s<.8*h||o?.rules.canDisguise)&&(a=t.OrderType.Attack),P.toTargetId(e.id,a,i.id)}function _(e,i){const{rx:s,ry:r}=e.tile,{rx:n,ry:o}=i.tile;return!e.primaryWeapon?.projectileRules.isAntiAir&&i.zone===t.ZoneType.Air||!e.primaryWeapon?.projectileRules.isAntiGround&&i.zone===t.ZoneType.Ground?null:1e6-(a=new t.Vector2(s,r),h=new t.Vector2(n,o),a.distanceTo(h));var a,h}var v,k,D;!function(t){t[t.Gathering=0]="Gathering",t[t.Attacking=1]="Attacking"}(v||(v={}));class E{constructor(t,e,i){this.rallyArea=t,this.targetArea=e,this.radius=i,this.lastCommand=null,this.state=v.Gathering,this.lastOrderGiven={}}getGlobalDebugText(){return this.debugLastTarget??"<none>"}setAttackArea(t){this.targetArea=t}onAiUpdate(e,i,s,r,n,o,a){if(n.getUnitIds().length>0&&(!this.lastCommand||e.getCurrentTick()>this.lastCommand+10)){this.lastCommand=e.getCurrentTick();const i=n.getCenterOfMass(),h=n.getMaxDistanceToCenterOfMass(),u=n.getUnitsMatching(e,(t=>t.rules.isSelectableCombatant)),c=n.getUnitsMatching(e,(e=>e.rules.isSelectableCombatant&&(e.rules.movementZone===t.MovementZone.Infantry||e.rules.movementZone===t.MovementZone.Normal||e.rules.movementZone===t.MovementZone.InfantryDestroyer)));if(this.state===v.Gathering){const r=10*t.GameMath.sqrt(c.length)+5;i&&h&&void 0!==e.mapApi.getTile(i.x,i.y)&&h>r?u.forEach((t=>{this.submitActionIfNew(s,C(t,i))})):(a(`CombatSquad ${n.getUniqueName()} switching back to attack mode (${h})`),this.state=v.Attacking)}else{const l=this.targetArea||r.startLocation,g=10*t.GameMath.sqrt(c.length)+15;if(i&&h&&void 0!==e.mapApi.getTile(i.x,i.y)&&h>g)return a(`CombatSquad ${n.getUniqueName()} switching back to gather (${h})`),this.state=v.Gathering,{type:"noop"};const p=function(t,e){if(0===t.length)return null;let i=0,s=e(t[0]);for(let r=1;r<t.length;++r){const n=e(t[r]);(null===s||null!==n&&n<s)&&(i=r,s=n)}return t[i]}(u,(t=>t.primaryWeapon?.maxRange??t.secondaryWeapon?.maxRange??5));if(!p)return{type:"noop"};const d=o.getHostilesNearPoint(p.tile.rx,p.tile.ry,15).map((({unitId:t})=>e.getUnitData(t))).filter((t=>!T(t)));for(const t of u){const e=w(d,(e=>_(t,e)));e?(this.submitActionIfNew(s,S(t,e)),this.debugLastTarget=`Unit ${e.id.toString()}`):(this.submitActionIfNew(s,C(t,l)),this.debugLastTarget=`@${l.x},${l.y}`)}}}return{type:"noop"}}submitActionIfNew(t,e){const i=this.lastOrderGiven[e.unitId];i&&i.isSameAs(e)||(t.push(e),this.lastOrderGiven[e.unitId]=e)}}class N extends h{constructor(t,e,i,s){super(t,s),this.retreatToPoint=e,this.withUnitIds=i,this.createdAt=null}_onAiUpdate(e,i,s,r,n){return this.createdAt||(this.createdAt=e.getCurrentTick()),this.getUnitIds().length>0?(i.orderUnits(this.getUnitIds(),t.OrderType.AttackMove,this.retreatToPoint.x,this.retreatToPoint.y),u()):this.createdAt&&e.getCurrentTick()>this.createdAt+240?u():p(this.withUnitIds,1e3)}getGlobalDebugText(){return`retreat with ${this.withUnitIds.length} units`}getPriority(){return 100}}!function(t){t[t.NoTargets=0]="NoTargets",t[t.DefenceTooStrong=1]="DefenceTooStrong"}(k||(k={})),function(t){t[t.Preparing=0]="Preparing",t[t.Attacking=1]="Attacking",t[t.Retreating=2]="Retreating"}(D||(D={}));class O extends h{constructor(t,e,i,s,r,n,o){super(t,o),this.priority=e,this.attackArea=s,this.radius=r,this.composition=n,this.lastTargetSeenAt=0,this.hasPickedNewTarget=!1,this.state=D.Preparing,this.squad=new E(i,s,r)}_onAiUpdate(t,e,i,s,r){switch(this.state){case D.Preparing:return this.handlePreparingState(t,e,i,s,r);case D.Attacking:return this.handleAttackingState(t,e,i,s,r);case D.Retreating:return this.handleRetreatingState(t,e,i,s,r)}}handlePreparingState(t,e,i,s,r){const n=x(this.getUnits(t),(t=>t.name)),o=Object.entries(this.composition).filter((([t,e])=>!n[t]||n[t]<e));return o.length>0?(this.priority=Math.min(1.01*this.priority,50),l(o.map((([t])=>t)),this.priority)):(this.priority=q,this.state=D.Attacking,{type:"noop"})}handleAttackingState(t,e,i,s,r){if(0===this.getUnitIds().length)return this.state=D.Retreating,{type:"noop"};const n=s.getHostilesNearPoint2d(this.attackArea,this.radius).map((e=>t.getUnitData(e.unitId))).filter((t=>!T(t))),o=this.squad.onAiUpdate(t,e,r,i,this,s,this.logger);if("noop"!==o.type)return o;if(n.length>0)this.lastTargetSeenAt=t.getCurrentTick(),this.hasPickedNewTarget=!1;else{if(t.getCurrentTick()>this.lastTargetSeenAt+900)return u(k.NoTargets);if(!this.hasPickedNewTarget&&t.getCurrentTick()>this.lastTargetSeenAt+450){const e=I(t,i);e&&(this.squad.setAttackArea(e),this.hasPickedNewTarget=!0)}}return{type:"noop"}}handleRetreatingState(t,e,i,s,r){return this.getUnits(t).forEach((t=>{r.push(C(t,s.getMainRallyPoint()))})),u()}getGlobalDebugText(){return this.squad.getGlobalDebugText()??"<none>"}getState(){return this.state}isUnitsLocked(){return this.state!==D.Preparing}getPriority(){return this.priority}}function I(e,i,s,r=!1){try{const s=0===e.generateRandomInt(0,1),n=w(e.getVisibleUnits(i.name,"enemy").map((t=>e.getUnitData(t))).filter((t=>!!t&&e.getPlayerData(t.owner).isCombatant)),(e=>((e,i)=>i&&e.rules.harvester?1e5:e.type===t.ObjectType.Building?10*e.maxHitPoints:e.maxHitPoints)(e,s)));if(n)return new t.Vector2(n.tile.rx,n.tile.ry);if(r){const t=e.mapApi,s=e.getPlayers().map(e.getPlayerData).filter((t=>!e.areAlliedPlayers(i.name,t.name))).filter((e=>{const s=t.getTile(e.startLocation.x,e.startLocation.y);return!!s&&!t.isVisibleTile(s,i.name)}));if(s.length>0)return s[e.generateRandomInt(0,s.length-1)].startLocation}}catch(t){return null}return null}const q=1;class R{constructor(t=-120){this.lastAttackAt=t}getName(){return"AttackMissionFactory"}maybeCreateMissions(e,i,s,r,n){if(e.getCurrentTick()<this.lastAttackAt+120)return;if(r.getMissions().some((t=>t instanceof O&&t.getState()===D.Preparing)))return;const o=e.getCurrentTick()>this.lastAttackAt+1800,a=I(e,i,0,o);if(!a)return;const h="attack_"+e.getCurrentTick(),u=function(e,i,s){if(i.country)return i.country.side===t.SideType.Nod?((t,e,i)=>{const s=t.getVisibleUnits(e.name,"self",(t=>"NAWEAP"===t.name)).length>0,r=t.getVisibleUnits(e.name,"self",(t=>"NARADR"===t.name)).length>0,n=t.getVisibleUnits(e.name,"self",(t=>"NATECH"===t.name)).length>0;return{...!n&&{E2:10},...s&&{HTNK:3,HTK:2},...r&&{V3:1},...n&&{APOC:2}}})(e,i):((t,e,i)=>{const s=t.getVisibleUnits(e.name,"self",(t=>"GAWEAP"===t.name)).length>0,r=t.getVisibleUnits(e.name,"self",(t=>"GAAIRC"===t.name||"AMRADR"===t.name)).length>0,n=t.getVisibleUnits(e.name,"self",(t=>"GATECH"===t.name)).length>0;return{...!r&&!n&&{E1:5},...s&&{MTNK:3,FV:2},...r&&{JUMPJET:6},...n&&{SREF:2,MGTK:3}}})(e,i);throw new Error(`player ${i.name} has no country`)}(e,i);r.addMission(new O(h,q,s.getMainRallyPoint(),a,10,u,n).then(((t,i)=>{r.addMission(new N("retreat-from-"+h+e.getCurrentTick(),s.getMainRallyPoint(),t,n))})))&&(this.lastAttackAt=e.getCurrentTick())}onMissionFailed(t,e,i,s,r,n){}}class V extends h{constructor(t,e,i){super(t,i),this.priority=e,this.scoutTarget=null,this.attemptsOnCurrentTarget=0,this.scoutTargetRefreshedAt=0,this.lastMoveCommandTick=0,this.scoutTargetIsPermanent=!1,this.hadUnit=!1}_onAiUpdate(e,i,r,n,o){const a=["ADOG","DOG","E1","E2","FV","HTK"],h=this.getUnitsOfTypes(e,...a);if((n.getSectorCache().getOverallVisibility()||0)>.9)return u();if(0===h.length)return this.scoutTarget&&this.hadUnit&&(this.attemptsOnCurrentTarget++,this.hadUnit=!1),l(a,this.priority);if(this.scoutTarget){if(this.hadUnit=!0,!this.scoutTargetIsPermanent){if(this.attemptsOnCurrentTarget>5)return this.logger(`Scout target ${this.scoutTarget.x},${this.scoutTarget.y} took too many attempts, moving to next`),this.setScoutTarget(null,0),{type:"noop"};if(e.getCurrentTick()>this.scoutTargetRefreshedAt+600)return this.logger(`Scout target ${this.scoutTarget.x},${this.scoutTarget.y} took too long, moving to next`),this.setScoutTarget(null,0),{type:"noop"}}const n=e.mapApi.getTile(this.scoutTarget.x,this.scoutTarget.y);if(!n)throw new Error(`target tile ${this.scoutTarget.x},${this.scoutTarget.y} does not exist`);if(e.getCurrentTick()>this.lastMoveCommandTick+30){this.lastMoveCommandTick=e.getCurrentTick(),h.forEach((e=>{this.scoutTarget&&i.orderUnits([e.id],t.OrderType.AttackMove,this.scoutTarget.x,this.scoutTarget.y)}));const r=h.map((t=>s(t.tile,this.scoutTarget))),n=Math.min(...r);(!this.scoutMinDistance||n<this.scoutMinDistance)&&(this.logger(`Scout timeout refreshed because unit moved closer to point (${n} < ${this.scoutMinDistance})`),this.scoutTargetRefreshedAt=e.getCurrentTick(),this.scoutMinDistance=n)}e.mapApi.isVisibleTile(n,r.name)&&(this.logger(`Scout target ${this.scoutTarget.x},${this.scoutTarget.y} successfully scouted, moving to next`),this.setScoutTarget(null,e.getCurrentTick()))}else{const t=n.getScoutingManager().getNewScoutTarget();if(!t)return this.logger("No more scouting targets available, disbanding."),u();this.setScoutTarget(t,e.getCurrentTick())}return{type:"noop"}}setScoutTarget(t,e){this.attemptsOnCurrentTarget=0,this.scoutTargetRefreshedAt=e,this.scoutTarget=t?.asVector2()??null,this.scoutMinDistance=void 0,this.scoutTargetIsPermanent=t?.isPermanent??!1}getGlobalDebugText(){return"scouting"}getPriority(){return this.priority}}class G{constructor(t=-300){this.lastScoutAt=t}getName(){return"ScoutingMissionFactory"}maybeCreateMissions(t,e,i,s,r){t.getCurrentTick()<this.lastScoutAt+300||i.getScoutingManager().hasScoutTargets()&&(s.addMission(new V("globalScout",10,r))||(this.lastScoutAt=t.getCurrentTick()))}onMissionFailed(t,e,i,s,r,n,o){t.getCurrentTick()<this.lastScoutAt+300||i.getScoutingManager().hasScoutTargets()&&s instanceof O&&(n.addMission(new V("globalScout",10,o)),this.lastScoutAt=t.getCurrentTick())}}class $ extends h{constructor(t,e,i,s,r,n){super(t,n),this.priority=e,this.defenceArea=s,this.radius=r,this.squad=new E(i,s,r)}_onAiUpdate(e,i,s,r,n){const o=r.getHostilesNearPoint2d(this.defenceArea,this.radius).map((t=>e.getUnitData(t.unitId))).filter((t=>!T(t))),a=this.squad.onAiUpdate(e,i,n,s,this,r,this.logger);if("noop"!==a.type)return a;if(0===o.length)return this.priority=0,this.getUnitIds().length>0?(this.logger(`(Defence Mission ${this.getUniqueName()}): No targets found, releasing units.`),{type:"releaseUnits",unitIds:this.getUnitIds()}):{type:"noop"};{const e=o[0];return this.logger(`(Defence Mission ${this.getUniqueName()}): Focused on target ${e?.name} (${o.length} found in area ${this.radius})`),this.squad.setAttackArea(new t.Vector2(o[0].tile.rx,o[0].tile.ry)),this.priority=100,{type:"requestCombatants",point:s.startLocation,radius:this.priority}}}getGlobalDebugText(){return this.squad.getGlobalDebugText()??"<none>"}getPriority(){return this.priority}}class L{constructor(){this.lastDefenceCheckAt=0}getName(){return"DefenceMissionFactory"}maybeCreateMissions(t,e,i,s,r){if(t.getCurrentTick()<this.lastDefenceCheckAt+30)return;this.lastDefenceCheckAt=t.getCurrentTick();const n=10+.001*t.getCurrentTick(),o=i.getHostilesNearPoint2d(e.startLocation,n).map((e=>t.getUnitData(e.unitId))).filter((t=>!T(t)));o.length>0&&(r(`Starting defence mission, ${o.length} found in radius ${n} (tick ${t.getCurrentTick()})`),s.addMission(new $("globalDefence",10,i.getMainRallyPoint(),e.startLocation,1.2*n,r)))}onMissionFailed(t,e,i,s,r,n){}}class j extends h{constructor(t,e,i,s){super(t,s),this.priority=e,this.captureTargetId=i,this.hasAttemptedCaptureWith=null}_onAiUpdate(e,i,s,r,n){const o=["ENGINEER","SENGINEER"],a=this.getUnitsOfTypes(e,...o);return 0===a.length?null!==this.hasAttemptedCaptureWith?u():l(o,this.priority):((!this.hasAttemptedCaptureWith||e.getCurrentTick()>this.hasAttemptedCaptureWith.gameTick+30)&&(i.orderUnits(a.map((t=>t.id)),t.OrderType.Capture,this.captureTargetId),this.hasAttemptedCaptureWith={unitId:a[0].id,gameTick:e.getCurrentTick()}),{type:"noop"})}getGlobalDebugText(){}getPriority(){return this.priority}}class F{constructor(){this.lastCheckAt=0}getName(){return"EngineerMissionFactory"}maybeCreateMissions(t,e,i,s,r){t.getCurrentTick()>this.lastCheckAt+300&&(this.lastCheckAt=t.getCurrentTick(),t.getVisibleUnits(e.name,"hostile",(t=>t.capturable&&t.produceCashAmount>0)).forEach((t=>{s.addMission(new j("capture-"+t,100,t,r))})))}onMissionFailed(t,e,i,s,r,n){}}class H{constructor(t){this.logger=t,this.missions=[],this.unitIdToMission=new Map,this.requestedUnitTypes=new Map,this.forceDisbandedMissions=[],this.missionFactories=[new A,new G,new R,new L,new F]}updateUnitIds(t){this.unitIdToMission=new Map,this.missions.forEach((e=>{const i=[];e.getUnitIds().forEach((s=>{this.unitIdToMission.has(s)?this.logger(`WARNING: unit ${s} is in multiple missions, please debug.`):t.getGameObjectData(s)?this.unitIdToMission.set(s,e):i.push(s)})),i.forEach((t=>e.removeUnit(t)))}))}onAiUpdate(e,i,s,r){this.missions=this.missions.filter((t=>t.isActive())),this.updateUnitIds(e);const n=new U,o=this.missions.map((t=>({mission:t,action:t.onAiUpdate(e,i,s,r,n)}))),a=new Map,h=[];this.forceDisbandedMissions.forEach((t=>a.set(t,null))),this.forceDisbandedMissions=[],o.filter(c).forEach((t=>{this.logger(`Mission ${t.mission.getUniqueName()} disbanding as requested.`),t.mission.getUnitIds().forEach((t=>{this.unitIdToMission.delete(t),i.setUnitDebugText(t,void 0)})),a.set(t.mission.getUniqueName(),t.action.reason)})),o.filter(f).forEach((t=>{t.action.unitIds.forEach((e=>{this.unitIdToMission.get(e)?.getUniqueName()===t.mission.getUniqueName()&&this.removeUnitFromMission(t.mission,e,i)}))}));const u=o.filter(d).reduce(((t,e)=>{const{unitIds:i}=e.action;return i.forEach((i=>{t.hasOwnProperty(i)?t[i].action.priority>t[i].action.priority&&(t[i]=e):t[i]=e})),t}),{}),l=Object.entries(u).flatMap((([t,s])=>{const r=Number.parseInt(t),n=e.getGameObjectData(r),{mission:o}=s,a=o.getUniqueName();return n?this.unitIdToMission.has(r)?[]:(this.addUnitToMission(o,n,i),[{unitName:n?.name,mission:o.getUniqueName()}]):(this.logger(`mission ${a} requested non-existent unit ${r}`),[])})).reduce(((t,e)=>(t[e.mission]||(t[e.mission]={}),t[e.mission][e.unitName]||(t[e.mission][e.unitName]=0),t[e.mission][e.unitName]=t[e.mission][e.unitName]+1,t)),{});Object.entries(l).forEach((([t,e])=>{this.logger(`Mission ${t} received: ${Object.entries(e).map((([t,e])=>t+" x "+e)).join(", ")}`)}));const p=o.filter(g).reduce(((t,e)=>{const{unitNames:i}=e.action;return i.forEach((i=>{t.hasOwnProperty(i)?t[i].action.priority>t[i].action.priority&&(t[i]=e):t[i]=e})),t}),{}),y=o.filter(m),A=e.getVisibleUnits(s.name,"self").map((t=>e.getGameObjectData(t))).filter((t=>!!t)).map((t=>({unit:t,mission:this.unitIdToMission.get(t.id)}))).filter((t=>!t.mission||!1===t.mission.isUnitsLocked()));A.sort(((t,e)=>(t.mission?.getPriority()??0)-(e.mission?.getPriority()??0)));const T=A.flatMap((({unit:e,mission:s})=>{if(p.hasOwnProperty(e.name)){const{mission:t}=p[e.name];if(s){if(s===t||s.getPriority()>t.getPriority())return[];this.removeUnitFromMission(s,e.id,i)}return this.logger(`granting unit ${e.id}#${e.name} to mission ${t.getUniqueName()}`),this.addUnitToMission(t,e,i),delete p[e.name],[{unitName:e.name,missionName:t.getUniqueName(),method:"type"}]}if(y.length>0){const r=y.find((i=>!!e?.rules?.isSelectableCombatant&&i.action.point.distanceTo(new t.Vector2(e.tile.rx,e.tile.ry))<=i.action.radius));if(r){if(s){if(s===r.mission||s.getPriority()>r.mission.getPriority())return[];this.removeUnitFromMission(s,e.id,i)}return this.addUnitToMission(r.mission,e,i),[{unitName:e.name,missionName:r.mission.getUniqueName(),method:"grab"}]}}return[]})).reduce(((t,e)=>(t[e.missionName]||(t[e.missionName]={}),t[e.missionName][e.unitName]||(t[e.missionName][e.unitName]={grab:0,type:0}),t[e.missionName][e.unitName][e.method]=t[e.missionName][e.unitName][e.method]+1,t)),{});Object.entries(T).forEach((([t,e])=>{this.logger(`Mission ${t} received: ${Object.entries(e).flatMap((([t,e])=>Object.entries(e).filter((([,t])=>t>0)).map((([e,i])=>t+" x "+i+" (by "+e+")")))).join(", ")}`)})),this.updateRequestedUnitTypes(p),n.resolve(i),this.missions.filter((t=>a.has(t.getUniqueName()))).forEach((t=>{const e=a.get(t.getUniqueName());this.logger(`mission disbanded: ${t.getUniqueName()}, reason: ${e}`),h.push({mission:t,reason:e}),t.endMission(a.get(t.getUniqueName()))})),this.missions=this.missions.filter((t=>!a.has(t.getUniqueName()))),this.missionFactories.forEach((t=>{t.maybeCreateMissions(e,s,r,this,this.logger),h.forEach((({reason:i,mission:n})=>{t.onMissionFailed(e,s,r,n,i,this,this.logger)}))}))}updateRequestedUnitTypes(t){const e=Array.from(this.requestedUnitTypes.keys());for(const t of e){const e=.75*this.requestedUnitTypes.get(t)-1;e>.5?this.requestedUnitTypes.set(t,e):this.requestedUnitTypes.delete(t)}Object.entries(t).forEach((([t,e])=>{const i=this.requestedUnitTypes.get(t);this.requestedUnitTypes.set(t,i?Math.max(i,e.action.priority):e.action.priority)}))}getRequestedUnitTypes(){return this.requestedUnitTypes}addUnitToMission(t,e,i){t.addUnit(e.id),this.unitIdToMission.set(e.id,t),i.setUnitDebugText(e.id,t.getUniqueName()+"_"+e.id)}removeUnitFromMission(t,e,i){t.removeUnit(e),this.unitIdToMission.delete(e),i.setUnitDebugText(e,void 0)}addMission(t){return this.missions.some((e=>e.getUniqueName()===t.getUniqueName()))?null:(this.logger(`Added mission: ${t.getUniqueName()}`),this.missions.push(t),t)}disbandMission(t){this.forceDisbandedMissions.push(t)}getGlobalDebugText(t){let e="";return this.missions.forEach((i=>{var s;this.logger(`Mission ${i.getUniqueName()}: ${Object.entries((s=i.getUnitIds(),x(s,(e=>t.getGameObjectData(e)?.name)))).map((([t,e])=>`${t} x ${e}`)).join(", ")}`);const r=i.getGlobalDebugText();r&&(e+=i.getUniqueName()+": "+r+"\n")})),e}updateDebugText(t){this.missions.forEach((e=>{e.getUnitIds().forEach((i=>t.setUnitDebugText(i,`${i}: ${e.getUniqueName()}`)))}))}getMissions(){return this.missions}}class Q{constructor(t,e,i){this.basePriority=t,this.baseAmount=e,this.groundStrength=i}getPlacementLocation(t,e,s){return((t,e,s)=>{let r=e.startLocation,n=t.getPlayers(),o=[];for(let s=0;s<n.length;++s){let a=n[s];if(a==e.name)continue;let h=t.getPlayerData(a);o.push(i(t,r,h.startLocation,4,16,1.5))}let a=o[Math.floor(t.generateRandom()*o.length)];return rt(t,e,a,s,!1,0)})(t,e,s)}getPriority(t,e,i,s){if(s){let t=s.totalAvailableAntiGroundFirepower+s.totalDefensivePower+this.groundStrength;return s.totalOffensiveLandThreat>1.1*t?this.basePriority*(s.totalOffensiveLandThreat/Math.max(1,t)):0}const r=this.groundStrength/i.cost*1e3,n=et(t,e,i);return this.basePriority*(1-n/this.baseAmount)*r}getMaxCount(t,e,i,s){return null}}class W{constructor(t,e,i,s){this.basePriority=t,this.artilleryPower=e,this.antiGroundPower=i,this.baseAmount=s}getPlacementLocation(t,e,i){}getPriority(t,e,i,s){return 0}getMaxCount(t,e,i,s){return null}}class B{constructor(t,e,i=1,s=0){this.basePriority=t,this.baseAmount=e,this.antiGroundPower=i,this.antiAirPower=s}getPlacementLocation(t,e,i){}getPriority(t,e,i,s){return 0}getMaxCount(t,e,i,s){return null}}class z{constructor(t,e,i){this.basePriority=t,this.maxNeeded=e,this.onlyBuildWhenFloatingCreditsAmount=i}getPlacementLocation(t,e,i){return rt(t,e,e.startLocation,i)}getPriority(t,e,i,s){const r=et(t,e,i);if(r>=(this.getMaxCount(t,e,i,s)??this.maxNeeded))return-100;const n=this.basePriority*(1-r/this.maxNeeded);return this.onlyBuildWhenFloatingCreditsAmount&&e.credits<this.onlyBuildWhenFloatingCreditsAmount?n*(e.credits/this.onlyBuildWhenFloatingCreditsAmount):n}getMaxCount(t,e,i,s){return this.maxNeeded}}class Y{constructor(t,e,i=1,s=0){this.basePriority=t,this.baseAmount=e,this.antiGroundPower=i,this.antiAirPower=s}getPlacementLocation(t,e,i){}getPriority(t,e,i,s){return 0}getMaxCount(t,e,i,s){return null}}class X{getPlacementLocation(t,e,i){return rt(t,e,e.startLocation,i)}getPriority(t,e,i){return e.power.total<e.power.drain?100:e.power.total<e.power.drain+i.power/2?20:0}getMaxCount(t,e,i,s){return null}}var Z=r(295);class K extends z{constructor(t,e,i){super(t,e,i)}getPlacementLocation(e,i,s){let r=i.startLocation;var n,o;let a=e.mapApi.getAllTilesResourceData();for(let e=0;e<a.length;++e){let i=a[e];if(i.spawnsOre){let e=t.GameMath.sqrt((r.x-i.tile.rx)**2+(r.y-i.tile.ry)**2);(null==o||e<o)&&(o=e,n=i.tile)}}return n&&(r=new Z.Vector2(n.rx,n.ry)),rt(e,i,r,s)}getMaxCount(t,e,i,s){const r=t.getVisibleUnits(e.name,"self",(t=>t.harvester)).length;return Math.max(1,2*r)}}class J extends Y{constructor(t,e,i){super(t,e,0,0),this.minNeeded=i}getPriority(t,e,i,s){const r=t.getVisibleUnits(e.name,"self",(t=>t.refinery)).length,n=t.getVisibleUnits(e.name,"self",(t=>t.harvester)).length,o=n<this.minNeeded?3:n>4*r?0:1;return this.basePriority*(r/Math.max(n/2,1))*o}}class tt{constructor(t,e,i){this.basePriority=t,this.baseAmount=e,this.airStrength=i}getPlacementLocation(t,e,s){let r=e.startLocation,n=t.getPlayers(),o=[];for(let s=0;s<n.length;++s){let a=n[s];if(a==e.name)continue;let h=t.getPlayerData(a);o.push(i(t,r,h.startLocation,4,16,1.5))}let a=o[Math.floor(t.generateRandom()*o.length)];return rt(t,e,a,s,!1,0)}getPriority(t,e,i,s){if(s){let t=s.totalAvailableAntiAirFirepower+this.airStrength;return s.totalOffensiveAirThreat>1.1*t?this.basePriority*(s.totalOffensiveAirThreat/Math.max(1,t)):0}const r=this.airStrength/i.cost*1e3,n=et(t,e,i);return this.basePriority*(1-n/this.baseAmount)*r}getMaxCount(t,e,i,s){return null}}function et(t,e,i){return t.getVisibleUnits(e.name,"self",(t=>t==i)).length}function it(t,e,i,s){return{x:t.x-i-(s?.width||0),y:t.y-i-(s?.height||0),width:e.width+2*i+(s?.width||0),height:e.height+2*i+(s?.height||0)}}function st(e,i,s,r){var n=e-s,o=i-r;let a=n*n+o*o;return 0===a?0:t.GameMath.sqrt(a)}function rt(e,i,s,r,n=!1,o=1){if(!e.getBuildingPlacementData(r.name))return;const a=(h=s,u=function(e,i,s,r,n){const o=e.getBuildingPlacementData(s.name),{width:a,height:h}=o.foundation,u=[],c=e.getVisibleUnits(i.name,"self",(e=>e.type===t.ObjectType.Building)),l=new Set;for(let i of c){const c=e.getUnitData(i);if(!c?.rules?.baseNormal)continue;const{foundation:g,tile:p}=c,d=new t.Vector2(p.rx,p.ry),m={width:g?.width,height:g?.height},f=it(d,m,s.adjacent,o.foundation),y=e.mapApi.getTile(f.x,f.y);if(!y)continue;const A=e.mapApi.getTilesInRect(y,{width:f.width,height:f.height}).filter((e=>!r||e.landType===t.LandType.Water));u.push(...A);const T=it(new t.Vector2(d.x-(a-1),d.y-(h-1)),{width:m.width+(a-1),height:m.height+(h-1)},n),b=A.filter((t=>t.rx>=T.x&&t.rx<T.x+T.width&&t.ry>=T.y&&t.ry<T.y+T.height));b.forEach((t=>l.add(t.id)))}var g,p;return(g=u,p=t=>t.id,Object.values(g.reduce(((t,e)=>{const i=p(e);return t[i]||(t[i]=e),t}),{}))).filter((t=>!l.has(t.id)))}(e,i,r,n,o),u.map((t=>({tile:t,distance:st(t.rx,t.ry,h.x,h.y)}))).sort(((t,e)=>t.distance-e.distance)));var h,u;for(let t of a)if(t.tile&&e.canPlaceBuilding(i.name,r.name,t.tile))return t.tile}const nt=new Map([["GAPOWR",new X],["GAREFN",new K(10,3)],["GAWEAP",new z(15,1)],["GAPILE",new z(12,1)],["CMIN",new J(15,4,2)],["GADEPT",new z(1,1,1e4)],["GAAIRC",new z(10,1,500)],["AMRADR",new z(10,1,500)],["GATECH",new z(20,1,4e3)],["GAYARD",new z(0,0,0)],["GAPILL",new Q(2,1,5)],["ATESLA",new Q(2,1,10)],["NASAM",new tt(2,1,5)],["GAWALL",new Q(0,0,0)],["E1",new Y(2,2,.2,0)],["ENGINEER",new Y(1,0,0)],["MTNK",new Y(10,3,2,0)],["MGTK",new Y(10,1,2.5,0)],["FV",new Y(5,2,.5,1)],["JUMPJET",new B(10,1,1,1)],["ORCA",new B(7,1,2,0)],["SREF",new W(10,5,3,3)],["CLEG",new Y(0,0)],["SHAD",new Y(0,0)],["NAPOWR",new X],["NAREFN",new K(10,3)],["NAWEAP",new z(15,1)],["NAHAND",new z(12,1)],["HARV",new J(15,4,2)],["NADEPT",new z(1,1,1e4)],["NARADR",new z(10,1,500)],["NANRCT",new X],["NAYARD",new z(0,0,0)],["NATECH",new z(20,1,4e3)],["NALASR",new Q(2,1,5)],["NAFLAK",new tt(2,1,5)],["TESLA",new Q(2,1,10)],["NAWALL",new Q(0,0,0)],["E2",new Y(2,2,.2,0)],["SENGINEER",new Y(1,0,0)],["FLAKT",new Y(2,2,.1,.3)],["YURI",new Y(1,1,1,0)],["DOG",new Y(1,1,0,0)],["HTNK",new Y(10,3,3,0)],["APOC",new Y(6,1,5,0)],["HTK",new Y(5,2,.33,1.5)],["ZEP",new B(5,1,5,1)],["V3",new W(9,10,0,3)]]),ot=[t.QueueType.Structures,t.QueueType.Armory,t.QueueType.Infantry,t.QueueType.Vehicles,t.QueueType.Aircrafts,t.QueueType.Ships],at=e=>{switch(e){case t.QueueType.Structures:return"Structures";case t.QueueType.Armory:return"Armory";case t.QueueType.Infantry:return"Infantry";case t.QueueType.Vehicles:return"Vehicles";case t.QueueType.Aircrafts:return"Aircrafts";case t.QueueType.Ships:return"Ships";default:return"Unknown"}};class ht{constructor(){this.queueStates=[]}onAiUpdate(t,e,i,s,r,n,o){this.queueStates=ot.map((i=>{const a=e.getAvailableObjects(i),h=this.getPrioritiesForBuildingOptions(t,a,r,s,n,o),u=h.length>0?h[h.length-1]:void 0;return{queue:i,items:h,topItem:u&&u.priority>0?u:void 0}}));const a=this.queueStates.map((t=>t.topItem?.priority)).reduce(((t,e)=>t+e),0),h=this.queueStates.map((t=>t.topItem?.unit.cost)).reduce(((t,e)=>t+e),0);this.queueStates.forEach((n=>{this.updateBuildQueue(t,e,i,s,r,n.queue,n.topItem,a,h,o)})),s.credits>0&&t.getVisibleUnits(s.name,"self",(t=>t.repairable)).forEach((e=>{const s=t.getUnitData(e);s&&s.hitPoints&&s.maxHitPoints&&!s.hasWrenchRepair&&s.hitPoints<s.maxHitPoints&&i.toggleRepairWrench(e)}))}updateBuildQueue(e,i,s,r,n,o,a,h,u,c){const l=r.credits,g=i.getQueueData(o);if(g.status==t.QueueStatus.Idle)void 0!==a&&(c(`Decision (${at(o)}): ${a.unit.name}`),s.queueForProduction(o,a.unit.name,a.unit.type,1));else if(g.status==t.QueueStatus.Ready&&g.items.length>0){const i=g.items[0].rules;if(o==t.QueueType.Structures||o==t.QueueType.Armory){let t=this.getBestLocationForStructure(e,r,i);void 0!==t?(c(`Completed: ${at(o)}: ${i.name}, placing at ${t.rx},${t.ry}`),s.placeBuilding(i.name,t.rx,t.ry)):c(`Completed: ${at(o)}: ${i.name} but nowhere to place it`)}}else if(g.status==t.QueueStatus.Active&&g.items.length>0&&null!=a){const t=g.items[0].rules;if(a.unit!=t){let i=this.getPriorityForBuildingOption(t,e,r,n);a.priority>2*i&&(c(`Dequeueing queue ${at(g.type)} unit ${t.name} because ${a.unit.name} has 2x higher priority.`),s.unqueueFromProduction(g.type,t.name,t.type,1))}else u>l&&a.priority<.25*h&&(c(`Pausing queue ${at(g.type)} because weight is low (${a.priority}/${h})`),s.pauseProduction(g.type))}else g.status==t.QueueStatus.OnHold&&(l>=u?(c(`Resuming queue ${at(g.type)} because credits are high`),s.resumeProduction(g.type)):a&&a.priority>=.25*h&&(c(`Resuming queue ${at(g.type)} because weight is high (${a.priority}/${h})`),s.resumeProduction(g.type)))}getPrioritiesForBuildingOptions(t,e,i,s,r,n){let o=[];return e.forEach((e=>{const n=this.getPriorityForBuildingOption(e,t,s,i),a=Math.max(n,r.get(e.name)??n);a>0&&o.push({unit:e,priority:a})})),o=o.sort(((t,e)=>t.priority-e.priority)),o}getPriorityForBuildingOption(t,e,i,s){return nt.has(t.name)?nt.get(t.name).getPriority(e,i,t,s):0-e.getVisibleUnits(i.name,"self",(e=>e==t)).length}getBestLocationForStructure(t,e,i){return nt.has(i.name)?nt.get(i.name).getPlacementLocation(t,e,i):rt(t,e,e.startLocation,i)}getGlobalDebugText(e,i){return`Production: ${ot.reduce(((e,s)=>{if(0===i.getQueueData(s).size)return e;const r=i.getQueueData(s).status===t.QueueStatus.OnHold;return e+" ["+at(s)+(r?" PAUSED":"")+": "+i.getQueueData(s).items.map((t=>t.rules.name+(t.quantity>1?"x"+t.quantity:"")))+"]"}),"")}\n${this.queueStates.filter((t=>t.items.length>0)).map((t=>{const e=t.items.map((t=>t.unit.name+"("+Math.round(10*t.priority)/10+")")).join(", ");return`${at(t.queue)} Prios: ${e}\n`})).join("")}`}}class ut{constructor(t,e,i,s,r,n,o,a,h){this.certainty=t,this.totalOffensiveLandThreat=e,this.totalOffensiveAirThreat=i,this.totalOffensiveAntiAirThreat=s,this.totalDefensiveThreat=r,this.totalDefensivePower=n,this.totalAvailableAntiGroundFirepower=o,this.totalAvailableAntiAirFirepower=a,this.totalAvailableAirPower=h}}function ct(t,e){let i=t.getUnitData(e);return!(!i||!i.primaryWeapon)&&i.primaryWeapon.projectileRules.isAntiGround}function lt(t,e){let i=t.getUnitData(e);return!(!i||!i.primaryWeapon)&&i.primaryWeapon.projectileRules.isAntiAir}function gt(e,i){let s=0;return i.forEach((i=>{let r=e.getUnitData(i);r&&(s+=function(e){let i=0,s=e.hitPoints/Math.max(1,e.maxHitPoints);return e.primaryWeapon&&(i+=s*((e.primaryWeapon.rules.damage+1)*t.GameMath.sqrt(e.primaryWeapon.rules.range+1))/Math.max(e.primaryWeapon.rules.rof,1)),e.secondaryWeapon&&(i+=s*((e.secondaryWeapon.rules.damage+1)*t.GameMath.sqrt(e.secondaryWeapon.rules.range+1))/Math.max(e.secondaryWeapon.rules.rof,1)),Math.min(800,i)}(r))})),s}class pt{constructor(t,e=0){this.bounds={x:t.x||0,y:t.y||0,width:t.width,height:t.height},this.maxObjects="number"==typeof t.maxObjects?t.maxObjects:10,this.maxLevels="number"==typeof t.maxLevels?t.maxLevels:4,this.level=e,this.objects=[],this.nodes=[]}getIndex(t){return t.qtIndex(this.bounds)}split(){const t=this.level+1,e=this.bounds.width/2,i=this.bounds.height/2,s=this.bounds.x,r=this.bounds.y,n=[{x:s+e,y:r},{x:s,y:r},{x:s,y:r+i},{x:s+e,y:r+i}];for(let s=0;s<4;s++)this.nodes[s]=new pt({x:n[s].x,y:n[s].y,width:e,height:i,maxObjects:this.maxObjects,maxLevels:this.maxLevels},t)}insert(t){if(this.nodes.length){const e=this.getIndex(t);for(let i=0;i<e.length;i++)this.nodes[e[i]].insert(t)}else if(this.objects.push(t),this.objects.length>this.maxObjects&&this.level<this.maxLevels){this.nodes.length||this.split();for(let t=0;t<this.objects.length;t++){const e=this.getIndex(this.objects[t]);for(let i=0;i<e.length;i++)this.nodes[e[i]].insert(this.objects[t])}this.objects=[]}}retrieve(t){const e=this.getIndex(t);let i=this.objects;if(this.nodes.length)for(let s=0;s<e.length;s++)i=i.concat(this.nodes[e[s]].retrieve(t));return 0===this.level?Array.from(new Set(i)):i}remove(t,e=!1){const i=this.objects.indexOf(t);i>-1&&this.objects.splice(i,1);for(let e=0;e<this.nodes.length;e++)this.nodes[e].remove(t);return 0!==this.level||e||this.join(),-1!==i}update(t,e=!1){this.remove(t,e),this.insert(t)}join(){let t=Array.from(this.objects);for(let e=0;e<this.nodes.length;e++){const i=this.nodes[e].join();t=t.concat(i)}const e=Array.from(new Set(t));if(e.length<=this.maxObjects){this.objects=e;for(let t=0;t<this.nodes.length;t++)this.nodes[t].objects=[];this.nodes=[]}return t}clear(){this.objects=[];for(let t=0;t<this.nodes.length;t++)this.nodes.length&&this.nodes[t].clear();this.nodes=[]}}class dt{constructor(t){this.x=t.x,this.y=t.y,this.r=t.r,this.data=t.data}qtIndex(t){const e=[],i=t.width/2,s=t.height/2,r=t.x+i,n=t.y+s,o=[[r,t.y],[t.x,t.y],[t.x,n],[r,n]];for(let t=0;t<o.length;t++)dt.intersectRect(this.x,this.y,this.r,o[t][0],o[t][1],o[t][0]+i,o[t][1]+s)&&e.push(t);return e}static intersectRect(t,e,i,s,r,n,o){const a=t-Math.max(s,Math.min(t,n)),h=e-Math.max(r,Math.min(e,o));return a*a+h*h<i*i}}var mt=r(82);class ft{constructor(t,e,i=!1){if(this.permanent=i,e.hasOwnProperty("x")&&e.hasOwnProperty("y"))this._targetPoint=e;else{if(!e.hasOwnProperty("sectorStartPoint"))throw new TypeError(`invalid object passed as target: ${e}`);this._targetSector=e}this._priority=t}get priority(){return this._priority}asVector2(){return this._targetPoint??this._targetSector?.sectorStartPoint??null}get targetSector(){return this._targetSector}get isPermanent(){return this.permanent}}class yt{constructor(t){this.logger=t,this.queuedRadius=2,this.scoutingQueue=new mt.PriorityQueue(((t,e)=>e.priority-t.priority))}addRadiusToScout(e,i,s,r,n){const{x:o,y:a}=i,{width:h,height:u}=s.getSectorBounds(),c=s.getSectorCoordinatesForWorldPosition(o,a);if(c)for(let i=Math.max(0,c.sectorX-r);i<Math.min(h,c.sectorX+r);++i)for(let o=Math.max(0,c.sectorY-r);o<Math.min(u,c.sectorY+r);++o){if(i===c?.sectorX&&o===c?.sectorY)continue;const r=t.GameMath.pow(i-c.sectorX,2)+t.GameMath.pow(o-c.sectorY,2),a=s.getSector(i,o);if(a){const t=new ft(n-r,a),i=t.asVector2();i&&e.mapApi.getTile(i.x,i.y)&&this.scoutingQueue.enqueue(t)}}}onGameStart(t,e,i){t.mapApi.getStartingLocations().filter((i=>{if(i==e.startLocation)return!1;let s=t.mapApi.getTile(i.x,i.y);return!!s&&!t.mapApi.isVisibleTile(s,e.name)})).map((t=>new ft(100,t,!0))).forEach((t=>{this.logger(`Adding ${t.asVector2()?.x},${t.asVector2()?.y} to initial scouting queue`),this.scoutingQueue.enqueue(t)})),this.addRadiusToScout(t,e.startLocation,i,2,1e3)}onAiUpdate(t,e,i){const s=this.scoutingQueue.front();if(!s)return;const r=s.asVector2();if(!r)return void this.scoutingQueue.dequeue();const{x:n,y:o}=r,a=t.mapApi.getTile(n,o);a&&t.mapApi.isVisibleTile(a,e.name)&&(this.logger("head point is visible, dequeueing"),this.scoutingQueue.dequeue());const h=Math.floor(t.getCurrentTick()/9e3);h>this.queuedRadius&&(this.logger(`expanding scouting radius from ${this.queuedRadius} to ${h}`),this.addRadiusToScout(t,e.startLocation,i,h,1e3),this.queuedRadius=h)}getNewScoutTarget(){return this.scoutingQueue.dequeue()}hasScoutTargets(){return!this.scoutingQueue.isEmpty()}}class At{constructor(t,e,i,s){this.threatCache=t,this.sectorCache=e,this.mainRallyPoint=i,this.logger=s,this._shouldAttack=!1;const{width:r,height:n}=e.getMapBounds();this.hostileQuadTree=new pt({width:r,height:n}),this.scoutingManager=new yt(s)}getHostilesNearPoint2d(t,e){return this.getHostilesNearPoint(t.x,t.y,e)}getHostilesNearPoint(e,i,s){return this.hostileQuadTree.retrieve(new dt({x:e,y:i,r:s})).map((({x:t,y:e,data:i})=>({x:t,y:e,unitId:i}))).filter((({x:r,y:n})=>new t.Vector2(r,n).distanceTo(new t.Vector2(e,i))<=s)).filter((({unitId:t})=>!!t))}getThreatCache(){return this.threatCache}getSectorCache(){return this.sectorCache}getMainRallyPoint(){return this.mainRallyPoint}getScoutingManager(){return this.scoutingManager}shouldAttack(){return this._shouldAttack}checkShouldAttack(t,e){let i=1.1*t.totalAvailableAntiGroundFirepower,s=1.1*(e*t.totalOffensiveLandThreat+t.totalDefensiveThreat),r=1.1*t.totalAvailableAirPower,n=1.1*(e*t.totalOffensiveAntiAirThreat+t.totalDefensiveThreat);return i>s||r>n}isHostileUnit(t,e){return!!t&&e.includes(t.owner)}onGameStart(t,e){this.scoutingManager.onGameStart(t,e,this.sectorCache)}onAiUpdate(e,s){const r=this.sectorCache;r.updateSectors(e.getCurrentTick(),8,e.mapApi,s),this.scoutingManager.onAiUpdate(e,s,r);let n=r?.getSectorUpdateRatio(e.getCurrentTick()-60*e.getTickRate());n&&n<1&&this.logger(100*n+"% of sectors updated in last 60 seconds."),e.getPlayers().map((t=>e.getPlayerData(t))).filter((t=>t.name!==s.name&&t.isCombatant&&!e.areAlliedPlayers(s.name,t.name))).map((t=>t.name));const o=e.getVisibleUnits(s.name,"enemy");try{const t=o.map((t=>e.getGameObjectData(t))).filter((t=>void 0!==t));a=this.hostileQuadTree,h=t,a.clear(),h.forEach((t=>{a.insert(new dt({x:t.tile.rx,y:t.tile.ry,r:1,data:t.id}))}))}catch(t){console.error("caught error",o)}var a,h;if(e.getCurrentTick()%30==0){let i=r?.getOverallVisibility();if(i){this.logger(Math.round(1e3*i)/10+"% of tiles visible. Calculating threat."),this.threatCache=function(e,i,s){let r=e.getVisibleUnits(i.name,"enemy",(e=>e.type==t.ObjectType.Vehicle||e.type==t.ObjectType.Infantry)),n=e.getVisibleUnits(i.name,"enemy",(e=>e.movementZone==t.MovementZone.Fly)),o=e.getVisibleUnits(i.name,"enemy",(e=>e.type==t.ObjectType.Building)).filter((t=>ct(e,t))),a=e.getVisibleUnits(i.name,"enemy",(e=>e.type!=t.ObjectType.Building)).filter((t=>lt(e,t))),h=e.getVisibleUnits(i.name,"self",(t=>t.isSelectableCombatant)).filter((t=>ct(e,t))),u=e.getVisibleUnits(i.name,"self",(e=>e.isSelectableCombatant||e.type===t.ObjectType.Building)).filter((t=>lt(e,t))),c=e.getVisibleUnits(i.name,"self",(e=>e.type===t.ObjectType.Building)).filter((t=>ct(e,t))),l=e.getVisibleUnits(i.name,"self",(e=>e.movementZone==t.MovementZone.Fly&&e.isSelectableCombatant)),g=gt(e,r),p=gt(e,n),d=gt(e,a),m=gt(e,o),f=gt(e,h),y=gt(e,u),A=gt(e,l),T=gt(e,c);return new ut(s,g,p,d,m,T,f,y,A)}(e,s,i);const r=Math.max(0,1-e.getCurrentTick()/108e3);this.logger(`Game length multiplier: ${r}`),this._shouldAttack?(this._shouldAttack=this.checkShouldAttack(this.threatCache,.75*r),this._shouldAttack||this.logger("Globally switched to defence mode.")):(this._shouldAttack=this.checkShouldAttack(this.threatCache,1.25*r),this._shouldAttack&&this.logger("Globally switched to attack mode."))}}if(e.getCurrentTick()%90==0){const t=e.getPlayers().filter((t=>t!==s.name&&!e.areAlliedPlayers(s.name,t))),r=e.getPlayerData(t[0]);this.mainRallyPoint=i(e,s.startLocation,r.startLocation,10,10,0)}}getGlobalDebugText(){if(this.threatCache)return`Threat LAND: Them ${Math.round(this.threatCache.totalOffensiveLandThreat)}, us: ${Math.round(this.threatCache.totalAvailableAntiGroundFirepower)}.\nThreat DEFENSIVE: Them ${Math.round(this.threatCache.totalDefensiveThreat)}, us: ${Math.round(this.threatCache.totalDefensivePower)}.\nThreat AIR: Them ${Math.round(this.threatCache.totalOffensiveAirThreat)}, us: ${Math.round(this.threatCache.totalAvailableAntiAirFirepower)}.`}}class Tt extends t.Bot{constructor(t,e,i=[],s=!0){super(t,e),this.tryAllyWith=i,this.enableLogging=s,this.tickOfLastAttackOrder=0,this.matchAwareness=null,this.missionController=new H(((t,e)=>this.logBotStatus(t,e))),this.queueController=new ht}onGameStart(t){const e=t.getTickRate();this.tickRatio=Math.ceil(e/5),this.knownMapBounds=t.mapApi.getRealMapSize();const i=t.getPlayerData(this.name);this.matchAwareness=new At(null,new a(t.mapApi,this.knownMapBounds),i.startLocation,((t,e)=>this.logBotStatus(t,e))),this.matchAwareness.onGameStart(t,i),this.logBotStatus(`Map bounds: ${this.knownMapBounds.width}, ${this.knownMapBounds.height}`),this.tryAllyWith.forEach((t=>this.actionsApi.toggleAlliance(t,!0)))}onGameTick(e){if(!this.matchAwareness)return;const i=this.matchAwareness.getThreatCache();if(e.getCurrentTick()/15%6==0&&this.updateDebugState(e),e.getCurrentTick()%this.tickRatio==0){const s=e.getPlayerData(this.name);this.matchAwareness.onAiUpdate(e,s);const r=e.getVisibleUnits(this.name,"self",(t=>t.isSelectableCombatant)),n=e.getVisibleUnits(this.name,"self",(t=>!!t.deploysInto&&e.getGeneralRules().baseUnit.includes(t.name))),o=e.getVisibleUnits(this.name,"self",(e=>e.type==t.ObjectType.Building&&e.factory!=t.FactoryType.None));0==r.length&&0==o.length&&0==n.length&&(this.logBotStatus("No army or production left, quitting."),this.actionsApi.quitGame()),this.gameApi.getCurrentTick()%3==0&&this.missionController.onAiUpdate(e,this.actionsApi,s,this.matchAwareness);const a=this.missionController.getRequestedUnitTypes();this.queueController.onAiUpdate(e,this.productionApi,this.actionsApi,s,i,a,(t=>this.logBotStatus(t)))}}getHumanTimestamp(t){return function(t,e=!1){let i=Math.floor(t/3600);t-=3600*i;let s=Math.floor(t/60);t-=60*s;let r=Math.floor(t);return[...i||!e?[i]:[],b(s,"00"),b(r,"00")].join(":")}(t.getCurrentTick()/15)}logBotStatus(t,e=!1){if(this.enableLogging&&(this.logger.info(t),e)){const e=this.getHumanTimestamp(this.gameApi);this.actionsApi.sayAll(`${e}: ${t}`)}}updateDebugState(t){if(!this.getDebugMode())return;const e=t.getPlayerData(this.name),i=t.getVisibleUnits(this.name,"self",(t=>t.harvester)).length;let s=`Cash: ${e.credits} | Harvesters: ${i}\n`;s+=this.queueController.getGlobalDebugText(this.gameApi,this.productionApi),s+=this.missionController.getGlobalDebugText(this.gameApi),s+=this.matchAwareness?.getGlobalDebugText(),this.missionController.updateDebugText(this.actionsApi),t.getVisibleUnits(this.name,"enemy").forEach((t=>{this.actionsApi.setUnitDebugText(t,t.toString())})),this.actionsApi.setGlobalDebugText(s)}onGameEvent(e){e.type===t.ApiEventType.ObjectDestroy&&e.attackerInfo?.playerName==this.name&&(this.tickOfLastAttackOrder+=(this.gameApi.getCurrentTick()-this.tickOfLastAttackOrder)/2)}}})(),n})()));